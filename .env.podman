### Database configuration
POSTGRES_DB=blog_dev
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_PORT=5432

### Testing database
POSTGRES_TEST_DB=blog_dev_test

### Redis configuration
REDIS_PORT=6379

### Application URLs
DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
REDIS_URL=redis://redis:${REDIS_PORT}

### Logging and performance
RUST_LOG=info
RUST_BACKTRACE=1

### Application settings
APP_PORT=8000
APP_HOST=0.0.0.0
JWT_SECRET=your-jwt-secret-please-change-in-production
JWT_EXPIRATION=86400 # 24 hours in seconds

### Resource settings
RUST_MIN_STACK=8388608 # 8MB stack size for Rust
CARGO_BUILD_JOBS=2 # Number of parallel build jobs

### CI/CD settings
CI_CARGO_FEATURES=
CI_TEST_TIMEOUT=120 # seconds
CARGO_INCREMENTAL=0 # Disable incremental compilation in CI
CARGO_NET_RETRY=5 # More retries for downloading dependencies
CARGO_HTTP_TIMEOUT=60 # Longer timeout for HTTP requests
CARGO_NET_OFFLINE=false # Set to true to force offline mode
RUSTC_WRAPPER=sccache # Uncomment to use sccache if available
CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse # Use sparse protocol for crates.io
RUSTFLAGS="-C target-cpu=native" # Optimize for the current CPU
RUSTDOCFLAGS="-D warnings" # Treat doc warnings as errors

### Dependency validation
VALIDATE_DEPS_STARTUP=true # Validate dependencies at startup
CARGO_FETCH_RETRIES=3 # Number of retries for cargo fetch
CARGO_AUDIT_LEVEL=medium # Audit level: low, medium, high, critical 